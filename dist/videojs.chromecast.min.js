/*! videojs-chromecast - v1.1.1 - 2016-06-29
* https://github.com/kim-company/videojs-chromecast
* Copyright (c) 2016 KIM Keep In Mind GmbH, srl; Licensed MIT */

(function(){var a,b,c,d,e=function(a,b){function c(){this.constructor=a}for(var d in b)f.call(b,d)&&(a[d]=b[d]);return c.prototype=b.prototype,a.prototype=new c,a.__super__=b.prototype,a},f={}.hasOwnProperty;videojs.addLanguage("de",{"CASTING TO":"WIEDERGABE AUF"}),videojs.addLanguage("fr",{"CASTING TO":"DIFFUSION SUR"}),videojs.addLanguage("it",{"CASTING TO":"PLAYBACK SU"}),videojs.plugin("chromecast",function(a){return this.ready(function(){return this.chromecastComponent=this.controlBar.addChild("ChromecastComponent",a)})}),d=videojs.getComponent("Button"),a=function(a){function b(a,c){this.settings=c,b.__super__.constructor.call(this,a,this.settings),a.controls()||this.disable(),this.hide(),this.initializeApi()}return e(b,a),b.prototype.buttonText="Chromecast",b.prototype.inactivityTimeout=2e3,b.prototype.apiInitialized=!1,b.prototype.apiSession=null,b.prototype.apiMedia=null,b.prototype.casting=!1,b.prototype.paused=!0,b.prototype.muted=!1,b.prototype.currentVolume=1,b.prototype.currentMediaTime=0,b.prototype.timer=null,b.prototype.timerStep=1e3,b.prototype.initializeApi=function(){var a,b,c;if(videojs.browser.IS_CHROME)return chrome.cast&&chrome.cast.isAvailable?(videojs.log("Cast APIs are available"),b=this.settings.hasOwnProperty("appId")&&this.settings.appId||chrome.cast.media.DEFAULT_MEDIA_RECEIVER_APP_ID,c=new chrome.cast.SessionRequest(b),a=new chrome.cast.ApiConfig(c,this.sessionJoinedListener,this.receiverListener.bind(this)),chrome.cast.initialize(a,this.onInitSuccess.bind(this),this.castError)):(videojs.log("Cast APIs not available. Waiting..."),void(window.__onGCastApiAvailable=this.deferedInitialize.bind(this)))},b.prototype.deferedInitialize=function(a,b){return a?this.initializeApi():(videojs.log("Error initialising API"),videojs.log(b))},b.prototype.sessionJoinedListener=function(a){},b.prototype.receiverListener=function(a){if(a===chrome.cast.ReceiverAvailability.AVAILABLE)return this.show()},b.prototype.onInitSuccess=function(){return this.apiInitialized=!0},b.prototype.castError=function(a){return videojs.log("Cast Error: "+JSON.stringify(a))},b.prototype.doLaunch=function(){return videojs.log("Cast video: "+this.player_.currentSrc()),this.apiInitialized?chrome.cast.requestSession(this.onSessionSuccess.bind(this),this.castError):videojs.log("Session not initialized")},b.prototype.onSessionSuccess=function(a){var b,c,d,e,f,g;if(videojs.log("Session initialized: "+a.sessionId),this.apiSession=a,this.addClass("connected"),e=new chrome.cast.media.MediaInfo(this.player_.currentSrc(),this.player_.currentType()),this.settings.metadata){e.metadata=new chrome.cast.media.GenericMediaMetadata,f=this.settings.metadata;for(c in f)g=f[c],e.metadata[c]=g;this.player_.options_.poster&&(b=new chrome.cast.Image(this.player_.options_.poster),e.metadata.images=[b])}return d=new chrome.cast.media.LoadRequest(e),d.autoplay=!0,d.currentTime=this.player_.currentTime(),this.apiSession.loadMedia(d,this.onMediaDiscovered.bind(this),this.castError),this.apiSession.addUpdateListener(this.onSessionUpdate.bind(this))},b.prototype.onMediaDiscovered=function(a){return this.apiMedia=a,this.apiMedia.addUpdateListener(this.onMediaStatusUpdate.bind(this)),this.startProgressTimer(this.incrementMediaTime.bind(this)),this.oldTech_=this.player_.techName_,this.oldSrc_=this.player_.currentSrc(),this.player_.loadTech_("ChromecastTech",{currentSrc:this.player_.currentSrc(),receiver:this.apiSession.receiver.friendlyName,chromecastComponent:this}),this.casting=!0,this.paused=this.player_.paused(),this.inactivityTimeout=this.player_.options_.inactivityTimeout,this.player_.options_.inactivityTimeout=0,this.player_.removeClass("not-hover"),this.player_.on("mouseout",this.doNotHover.bind(this)),this.player_.userActive(!0)},b.prototype.doNotHover=function(){return this.player_.removeClass("not-hover")},b.prototype.onSessionUpdate=function(a){if(this.apiMedia)return a?void 0:this.onStopAppSuccess()},b.prototype.onMediaStatusUpdate=function(a){if(this.apiMedia)switch(this.currentMediaTime=this.apiMedia.currentTime,this.apiMedia.playerState){case chrome.cast.media.PlayerState.IDLE:return this.currentMediaTime=0,this.trigger("timeupdate"),this.onStopAppSuccess();case chrome.cast.media.PlayerState.PAUSED:if(this.paused)return;return this.player_.pause(),this.paused=!0;case chrome.cast.media.PlayerState.PLAYING:if(!this.paused)return;return this.player_.play(),this.paused=!1}},b.prototype.startProgressTimer=function(a){return this.timer&&(clearInterval(this.timer),this.timer=null),this.timer=setInterval(a.bind(this),this.timerStep)},b.prototype.play=function(){if(this.apiMedia)return this.paused?(this.apiMedia.play(null,this.mediaCommandSuccessCallback.bind(this,"Playing: "+this.apiMedia.sessionId),this.handleTechError),this.paused=!1):void 0},b.prototype.pause=function(){if(this.apiMedia)return this.paused?void 0:(this.apiMedia.pause(null,this.mediaCommandSuccessCallback.bind(this,"Paused: "+this.apiMedia.sessionId),this.handleTechError),this.paused=!0)},b.prototype.seekMedia=function(a){var b;return b=new chrome.cast.media.SeekRequest,b.currentTime=a,this.player_.controlBar.progressControl.seekBar.videoWasPlaying&&(b.resumeState=chrome.cast.media.ResumeState.PLAYBACK_START),this.apiMedia.seek(b,this.onSeekSuccess.bind(this,a),this.handleTechError)},b.prototype.onSeekSuccess=function(a){return this.currentMediaTime=a},b.prototype.setMediaVolume=function(a,b){var c,d;if(this.apiMedia)return d=new chrome.cast.Volume,d.level=a,d.muted=b,this.currentVolume=d.level,this.muted=b,c=new chrome.cast.media.VolumeRequest,c.volume=d,this.apiMedia.setVolume(c,this.mediaCommandSuccessCallback.bind(this,"Volume changed"),this.handleTechError),this.player_.trigger("volumechange")},b.prototype.incrementMediaTime=function(){if(this.apiMedia.playerState===chrome.cast.media.PlayerState.PLAYING)return this.currentMediaTime<this.apiMedia.media.duration?(this.currentMediaTime+=1,this.trigger("timeupdate")):(this.currentMediaTime=0,clearInterval(this.timer))},b.prototype.mediaCommandSuccessCallback=function(a,b){return videojs.log(a)},b.prototype.handleTechError=function(){return videojs.log("error")},b.prototype.stopCasting=function(){return this.apiSession.stop(this.onStopAppSuccess.bind(this),this.handleTechError)},b.prototype.onStopAppSuccess=function(){return clearInterval(this.timer),this.casting=!1,this.removeClass("connected"),this.player_.loadTech_(this.oldTech_),this.player_.catalog&&this.player_.catalog.load&&this.player_.mediainfo&&this.player_.mediainfo.id?this.player_.catalog.load(this.player_.mediainfo):this.player_.src(this.oldSrc_),this.paused||this.player_.one("seeked",function(){return this.player_.play()}),this.player_.currentTime(this.currentMediaTime),this.player_.options_.inactivityTimeout=this.inactivityTimeout,this.apiMedia=null,this.apiSession=null},b.prototype.buildCSSClass=function(){return b.__super__.buildCSSClass.apply(this,arguments)+"vjs-chromecast-button"},b.prototype.handleClick=function(){return b.__super__.handleClick.apply(this,arguments),this.casting?this.stopCasting():this.doLaunch()},b}(d),videojs.registerComponent("ChromecastComponent",a),c=videojs.getTech("Tech"),b=function(a){function b(a){this.featuresVolumeControl=!0,this.movingMediaElementInDOM=!1,this.featuresFullscreenResize=!1,this.featuresProgressEvents=!0,this.receiver=a.source.receiver,this.player_id_=a.playerId,this.chromecastComponent_=a.source.chromecastComponent,this.poster_=a.poster,this.currentSrc_=a.source.currentSrc,b.__super__.constructor.call(this,a),this.triggerReady()}return e(b,a),b.isSupported=function(){return this.chromecastComponent_.apiInitialized},b.canPlaySource=function(a){return"video/mp4"===a.type||"video/webm"===a.type||"application/x-mpegURL"===a.type||"application/vnd.apple.mpegURL"===a.type},b.prototype.createEl=function(){var a;return a=document.createElement("div"),a.id=this.player_id_+"_chromecast_api",a.className="vjs-tech vjs-tech-chromecast",a.innerHTML='<div class="casting-image" style="background-image: url(\''+this.poster_+'\')"></div>\n<div class="casting-overlay">\n  <div class="casting-information">\n    <div class="casting-icon"></div>\n    <div class="casting-description"><small>'+this.localize("CASTING TO")+"</small><br>"+this.receiver+"</div>\n  </div>\n</div>",a},b.prototype.play=function(){return this.chromecastComponent_.play(),this.trigger("play")},b.prototype.pause=function(){return this.chromecastComponent_.pause(),this.trigger("pause")},b.prototype.paused=function(){return this.chromecastComponent_.paused},b.prototype.currentTime=function(){return this.chromecastComponent_.currentMediaTime},b.prototype.setCurrentTime=function(a){return this.chromecastComponent_.seekMedia(a)},b.prototype.currentSrc=function(a){return"undefined"!=typeof a&&videojs.log("TODO Should change source to: "+a),this.currentSrc_},b.prototype.src=function(a){return this.currentSrc(a)},b.prototype.duration=function(){return videojs.log("ChromecastTech got duration call??")},b.prototype.ended=function(){return!0},b.prototype.controls=function(){return!1},b.prototype.volume=function(){return this.chromecastComponent_.currentVolume},b.prototype.setVolume=function(a){return this.chromecastComponent_.setMediaVolume(a,!1)},b.prototype.muted=function(){return this.chromecastComponent_.muted},b.prototype.setMuted=function(a){return this.chromecastComponent_.setMediaVolume(this.chromecastComponent_.currentVolume,a)},b.prototype.supportsFullScreen=function(){return!1},b}(c),videojs.registerTech("ChromecastTech",b)}).call(this);